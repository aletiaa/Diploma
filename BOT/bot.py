import asyncio
import logging
from aiogram import Bot, Dispatcher
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage

from .handlers.registration import register_admin, register_user, register_start  # –ü—ñ–¥–∫–ª—é—á–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
from .handlers.login import login_user, login_admin
from .handlers.edit import edit_profile_user, edit_profile_admin
from .handlers.news import news_admin, news_user
from .handlers.admin import admin_panel
from .handlers.communication import communication_admin, communication_user
from .handlers.file_work import user_upload, files_admin
from .handlers.events import events_admin, events_user
from .utils import notify
from .database.db import init_db                     # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–î
from .config import BOT_TOKEN                        # –¢–æ–∫–µ–Ω –±–æ—Ç–∞
from .tasks.reminders import start_reminder_scheduler

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO)

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –±–æ—Ç–∞
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

async def main():
    # –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è –ë–î
    init_db()

    start_reminder_scheduler(bot)
    
    # –í–∏–¥–∞–ª–µ–Ω–Ω—è –ø–æ–ø–µ—Ä–µ–¥–Ω—ñ—Ö –≤–µ–±—Ö—É–∫—ñ–≤
    await bot.delete_webhook(drop_pending_updates=True)

    # –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –æ–±—Ä–æ–±–Ω–∏–∫—ñ–≤
    dp.include_router(register_user.router)
    dp.include_router(register_admin.router)
    dp.include_router(register_start.router)
    dp.include_router(login_user.router)
    dp.include_router(login_admin.router)
    dp.include_router(edit_profile_user.router)
    dp.include_router(edit_profile_admin.router)
    dp.include_router(admin_panel.router)
    dp.include_router(news_admin.router)
    dp.include_router(news_user.router)
    dp.include_router(communication_admin.router)
    dp.include_router(communication_user.router)
    dp.include_router(user_upload.router)
    dp.include_router(files_admin.router)
    dp.include_router(notify.router)
    dp.include_router(events_user.router)
    dp.include_router(events_admin.router)

    logging.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ!")
    try:
        await dp.start_polling(bot)
    except Exception as e:
        logging.error(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞: {e}")

if __name__ == "__main__":
    asyncio.run(main())
