from aiogram import Router, types
import sqlite3
from ..utils.specialties import search_specialty
from aiogram.filters import Command

router = Router()
edit_state = {}

@router.message(Command("edit_profile"))
async def edit_profile_command(message: types.Message):
    kb = types.ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add("üî§ –ó–º—ñ–Ω–∏—Ç–∏ —ñ–º‚Äô—è", "üì± –ó–º—ñ–Ω–∏—Ç–∏ –Ω–æ–º–µ—Ä")
    kb.add("üéì –ó–º—ñ–Ω–∏—Ç–∏ –≥—Ä—É–ø—É", "üìò –ó–º—ñ–Ω–∏—Ç–∏ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å")
    kb.add("‚ùå –í–∏–π—Ç–∏")
    edit_state[message.chat.id] = {"step": "choose"}
    await message.answer("–©–æ —Å–∞–º–µ —Ö–æ—á–µ—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏? üëá", reply_markup=kb)

@router.message()
async def handle_editing(message: types.Message):
    chat_id = message.chat.id
    text = message.text.strip()

    if chat_id not in edit_state:
        return

    state = edit_state[chat_id]

    if state.get("step") == "choose":
        if "—ñ–º‚Äô—è" in text:
            state["field"] = "full_name"
            state["step"] = "edit"
            await message.answer("‚úèÔ∏è –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–µ —ñ–º‚Äô—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ:")
        elif "–Ω–æ–º–µ—Ä" in text:
            state["field"] = "phone_number"
            state["step"] = "edit"
            await message.answer("üìû –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
        elif "–≥—Ä—É–ø—É" in text:
            state["field"] = "group_name"
            state["step"] = "edit"
            await message.answer("üéì –í–≤–µ–¥—ñ—Ç—å –Ω–æ–≤—É –Ω–∞–∑–≤—É –≥—Ä—É–ø–∏:")
        elif "—Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å" in text:
            state["field"] = "specialty"
            state["step"] = "edit"
            await message.answer("üìò –í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –∞–±–æ —á–∞—Å—Ç–∏–Ω—É –Ω–∞–∑–≤–∏ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ:")
        elif "–≤–∏–π—Ç–∏" in text.lower():
            del edit_state[chat_id]
            await message.answer("‚úÖ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ.", reply_markup=types.ReplyKeyboardRemove())
        else:
            await message.answer("‚ö†Ô∏è –ë—É–¥—å –ª–∞—Å–∫–∞, –æ–±–µ—Ä—ñ—Ç—å –∑—ñ —Å–ø–∏—Å–∫—É –∫–Ω–æ–ø–æ–∫.")

    elif state["step"] == "edit":
        conn = sqlite3.connect("alumni.db")
        c = conn.cursor()
        telegram_id = str(message.from_user.id)

        if state["field"] == "specialty":
            matches = search_specialty(text)
            if not matches:
                await message.answer("‚ùå –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ.")
                return
            elif len(matches) > 1:
                options = "\n".join([f"{m['code']} ‚Äì {m['name']}" for m in matches])
                await message.answer(f"üîç –ó–Ω–∞–π–¥–µ–Ω–æ –¥–µ–∫—ñ–ª—å–∫–∞:\n{options}\n–í–≤–µ–¥—ñ—Ç—å —Ç–æ—á–Ω—ñ—à–µ:")
                return
            specialty = matches[0]
            c.execute("SELECT id FROM specialties WHERE code=? AND name=?", (specialty["code"], specialty["name"]))
            row = c.fetchone()
            if not row:
                await message.answer("‚ùó –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ.")
                return
            c.execute("UPDATE users SET specialty_id = ? WHERE telegram_id = ?", (row[0], telegram_id))
            await message.answer(f"‚úÖ –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: {specialty['name']} ({specialty['code']})")

        elif state["field"] == "group_name":
            try:
                c.execute("ALTER TABLE users ADD COLUMN group_name TEXT")  # –¥–æ–¥–∞—Ç–∏, —è–∫—â–æ —â–µ –Ω–µ–º–∞—î
            except:
                pass
            c.execute("UPDATE users SET group_name = ? WHERE telegram_id = ?", (text, telegram_id))
            await message.answer(f"‚úÖ –ì—Ä—É–ø—É –æ–Ω–æ–≤–ª–µ–Ω–æ –Ω–∞: {text}")

        else:
            column = state["field"]
            c.execute(f"UPDATE users SET {column} = ? WHERE telegram_id = ?", (text, telegram_id))
            await message.answer("‚úÖ –î–∞–Ω—ñ –æ–Ω–æ–≤–ª–µ–Ω–æ.")

        conn.commit()
        conn.close()
        del edit_state[chat_id]
        await message.answer("–ë–∞–∂–∞—î—Ç–µ —â–µ —â–æ—Å—å –∑–º—ñ–Ω–∏—Ç–∏?", reply_markup=types.ReplyKeyboardRemove())
