from aiogram import Router, types
from aiogram.filters import Command
import sqlite3
from ..utils.specialties import search_specialty
from ..utils.department_recogniser import normalize_department
from ..utils.keyboard import main_menu_keyboard
from datetime import datetime

router = Router()
user_state = {}

ADMIN_PASSWORD = "051220044"

@router.message(Command("start"))
async def start(message: types.Message):
    user_state[message.chat.id] = {"step": "role_choice"}
    await message.answer(
        "–í—ñ—Ç–∞—é! –í–∏ —Ö–æ—á–µ—Ç–µ —É–≤—ñ–π—Ç–∏ —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —á–∏ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä?"
        "–í–≤–µ–¥—ñ—Ç—å <b>user</b> –∞–±–æ <b>admin</b>:")

@router.message()
async def registration(message: types.Message):
    chat_id = message.chat.id
    text = message.text.strip()

    if chat_id not in user_state:
        return

    state = user_state[chat_id]
    step = state.get("step")

    if step == "role_choice":
        if text.lower() == "admin":
            state["step"] = "admin_password"
            await message.answer("üîê –í–≤–µ–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞:")
            return
        elif text.lower() == "user":
            state["role"] = "user"
            state["step"] = "name"
            await message.answer("üëã –ü–æ—á–Ω–µ–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é.–í–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ:")
            return
        else:
            await message.answer("‚ùó –í–≤–µ–¥—ñ—Ç—å –ª–∏—à–µ <b>user</b> –∞–±–æ <b>admin</b>.")
            return

    if step == "admin_password":
        if text == ADMIN_PASSWORD:
            state["role"] = "admin"
            state["step"] = "name"
            await message.answer("‚úÖ –ü–∞—Ä–æ–ª—å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–æ. –í–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ:")
        else:
            await message.answer("‚ùå –ù–µ–≤—ñ—Ä–Ω–∏–π –ø–∞—Ä–æ–ª—å. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑ –∞–±–æ –≤–≤–µ–¥—ñ—Ç—å <b>user</b> —â–æ–± —É–≤—ñ–π—Ç–∏ —è–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á:")
        return

    if step == "name":
        state["name"] = text
        state["step"] = "birth_date"
        await message.answer("üéÇ –í–∫–∞–∂—ñ—Ç—å –¥–∞—Ç—É –Ω–∞—Ä–æ–¥–∂–µ–Ω–Ω—è —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î:")

    elif step == "birth_date":
        try:
            birth_date = datetime.strptime(text, "%Y-%m-%d").date()
            state["birth_date"] = str(birth_date)
            state["step"] = "year"
            await message.answer("üìÖ –í–∫–∞–∂—ñ—Ç—å —Ä—ñ–∫ –≤–∏–ø—É—Å–∫—É (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, 2022):")
        except ValueError:
            await message.answer("‚ùó –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É —É —Ñ–æ—Ä–º–∞—Ç—ñ –†–†–†–†-–ú–ú-–î–î.")
        return
    
    elif step == "year":
        if not text.isdigit():
            await message.answer("‚ùó –í–≤–µ–¥—ñ—Ç—å —Ä—ñ–∫ —É —á–∏—Å–ª–æ–≤–æ–º—É —Ñ–æ—Ä–º–∞—Ç—ñ.")
            return
        state["year"] = int(text)
        state["step"] = "department"
        await message.answer("üè´ –í–≤–µ–¥—ñ—Ç—å –Ω–∞–∑–≤—É –∞–±–æ —Å–∫–æ—Ä–æ—á–µ–Ω–Ω—è –∫–∞—Ñ–µ–¥—Ä–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –¢–ï–§):")

    elif step == "department":
        department_name = normalize_department(text)
        if not department_name:
            await message.answer("‚ö†Ô∏è –ù–µ –≤–¥–∞–ª–æ—Å—è —Ä–æ–∑–ø—ñ–∑–Ω–∞—Ç–∏ –∫–∞—Ñ–µ–¥—Ä—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return

        conn = sqlite3.connect("alumni.db")
        c = conn.cursor()
        c.execute("SELECT id FROM departments WHERE name = ?", (department_name,))
        row = c.fetchone()
        conn.close()

        if not row:
            await message.answer("üìõ –ö–∞—Ñ–µ–¥—Ä–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑—ñ.")
            return

        state["department_id"] = row[0]
        state["step"] = "specialty"
        await message.answer("üìò –í–≤–µ–¥—ñ—Ç—å –∫–æ–¥ –∞–±–æ —á–∞—Å—Ç–∏–Ω—É –Ω–∞–∑–≤–∏ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–æ—Å—Ç—ñ:")

    elif step == "specialty":
        matches = search_specialty(text)
        if not matches:
            await message.answer("‚ùå –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return
        elif len(matches) > 1:
            options = "".join([f"{m['code']} ‚Äì {m['name']}" for m in matches])
            await message.answer(f"üîç –ó–Ω–∞–π–¥–µ–Ω–æ –¥–µ–∫—ñ–ª—å–∫–∞:{options}\n–í–≤–µ–¥—ñ—Ç—å —Ç–æ—á–Ω—ñ—à–µ:")
            return

        specialty = matches[0]
        conn = sqlite3.connect("alumni.db")
        c = conn.cursor()
        c.execute("SELECT id FROM specialties WHERE code = ? AND name = ?", (specialty['code'], specialty['name']))
        row = c.fetchone()
        if not row:
            await message.answer("‚ùó –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å —É –±–∞–∑—ñ.")
            return


        specialty_id = row[0]
        c.execute('''
            INSERT OR IGNORE INTO users (telegram_id, full_name, graduation_year, department_id, specialty_id, role, birth_date)
            VALUES (?, ?, ?, ?, ?, ?, ?)
        ''', (
            str(message.from_user.id),
            state['name'],
            state['year'],
            state['department_id'],
            specialty_id,
            state['role'],
            state['birth_date']
        ))
        conn.commit()
        conn.close()

        await message.answer(
            f"üìù –í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω—ñ —è–∫:"
            f"üë§ –Ü–º‚Äô—è: <b>{state['name']}</b>"
            f"üìÖ –†—ñ–∫ –≤–∏–ø—É—Å–∫—É: <b>{state['year']}</b>"
            f"üèõ –ö–∞—Ñ–µ–¥—Ä–∞ ID: <b>{state['department_id']}</b>"
            f"üìò –°–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ—Å—Ç—å ID: <b>{specialty_id}</b>"
            f"üîê –†–æ–ª—å: <b>{state['role']}</b>"
            "‚ùì –ë–∞–∂–∞—î—Ç–µ –∑–º—ñ–Ω–∏—Ç–∏ —Ü—ñ –¥–∞–Ω—ñ? –í–≤–µ–¥—ñ—Ç—å /start –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó –∞–±–æ –æ–±–µ—Ä—ñ—Ç—å –¥—ñ—é –Ω–∏–∂—á–µ ‚¨áÔ∏è"
        )

        del user_state[chat_id]

        await message.answer(
            f"üéâ –î—è–∫—É—î–º–æ –∑–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é, <b>{state['name']}</b>!"
            f"üîΩ –û–±–µ—Ä—ñ—Ç—å, —â–æ –±–∞–∂–∞—î—Ç–µ –∑—Ä–æ–±–∏—Ç–∏ –¥–∞–ª—ñ:",
            reply_markup=main_menu_keyboard()
        )

        if state["role"] == "admin":
            await message.answer("üîß –í–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ —è–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä. –í–≤–µ–¥—ñ—Ç—å /admin_panel —â–æ–± –≤—ñ–¥–∫—Ä–∏—Ç–∏ –ø–∞–Ω–µ–ª—å –∫–µ—Ä—É–≤–∞–Ω–Ω—è.")

