# ‚úÖ FILE: handlers/registration/register_user.py
from aiogram import Router, types
from aiogram.filters import Command
from ...utils.keyboard import contact_request_keyboard
from .state import user_state
from .shared_registration_steps import (
    handle_contact, ask_for_phone_number, ask_about_old_number, ask_old_number_directly,
    ask_birth_date, ask_graduation_year, ask_department, ask_specialty
)

router = Router()


@router.message(Command("start"))
async def start(message: types.Message):
    chat_id = message.chat.id
    user_state[chat_id] = {"step": "name", "role": "user"}
    await message.answer("üëã –ü–æ—á–Ω–µ–º–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é. –í–∫–∞–∂—ñ—Ç—å –≤–∞—à–µ —ñ–º‚Äô—è —Ç–∞ –ø—Ä—ñ–∑–≤–∏—â–µ:")


@router.message(lambda message: message.contact is not None)
async def handle_user_contact(message: types.Message):
    return await handle_contact(message, role="user")


@router.message()
async def continue_registration(message: types.Message):
    chat_id = message.chat.id
    if chat_id not in user_state:
        await message.answer("‚ùó –ë—É–¥—å –ª–∞—Å–∫–∞, –ø–æ—á–Ω—ñ—Ç—å –∑ –∫–æ–º–∞–Ω–¥–∏ /start")
        return

    state = user_state[chat_id]
    step = state.get("step")
    text = message.text.strip()

    if step == "name":
        state["name"] = text
        await ask_for_phone_number(message)

    elif step == "phone_number":
        from ...utils.phone_validator import is_valid_phone
        if not is_valid_phone(text):
            await message.answer("‚ùó –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É –∞–±–æ –Ω–µ–≤—ñ–¥–æ–º–∏–π –∫–æ–¥ –∫—Ä–∞—ó–Ω–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")
            return
        state["phone_number"] = text
        state["step"] = "ask_old_number"
        await message.answer("üì≤ –ß–∏ –º–∞–ª–∏ –≤–∏ —Ü–µ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —â–µ –ø—ñ–¥ —á–∞—Å –Ω–∞–≤—á–∞–Ω–Ω—è? –í–≤–µ–¥—ñ—Ç—å <b>—Ç–∞–∫</b> –∞–±–æ <b>–Ω—ñ</b>.")

    elif step == "ask_old_number":
        await ask_about_old_number(message)

    elif step == "enter_old_number":
        await ask_old_number_directly(message)

    elif step == "birth_date":
        await ask_birth_date(message)

    elif step == "year":
        await ask_graduation_year(message)

    elif step == "department":
        await ask_department(message)

    elif step == "specialty":
        await ask_specialty(message)
